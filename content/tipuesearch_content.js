var tipuesearch = {"pages": [{'title': '40823250', 'text': 'cmsite: wcms use  https://github.com/mdecycu/cmsimde  as submodule \n', 'tags': '', 'url': '40823250.html'}, {'title': '倉儲網站', 'text': '40823250網站 \n \n', 'tags': '', 'url': '倉儲網站.html'}, {'title': 'Note', 'text': '', 'tags': '', 'url': 'Note.html'}, {'title': 'w3', 'text': '建立課程帳號以及 replit 帳號 \xa0 \n \n 透過\xa0\xa0 mdecad2022\xa0\xa0 的 organization 建立個人可以管理的倉儲 (site-Github_帳號) \xa0 \n 利用\xa0\xa0 replit 帳號所啟動的動態網站進行內容管理 \xa0 \n 動態轉為靜態網站內容之後,\xa0\xa0 要設法與 Github 倉儲同步. \xa0 \n \n \xa0 之後申請帳號都使用 @nfu\xa0\xa0 電子郵箱 \xa0 \n \xa0 修補課程網站安全疑慮: \xa0 \n \xa0 目的:\xa0\xa0 不想讓 config/config 帶有編碼後的管理者密碼 \xa0 \n \xa0 執行步驟: \xa0 \n \xa0 必須先在個人的 mdecad2022/site-github_帳號\xa0 倉儲進行處理 \xa0 \n \n 第一步就是刪除 config/config 設定檔案 \xa0 \n 修改 .gitignore 成為:\xa0\xa0 \xa0 https://raw.githubusercontent.com/mdecad2022/site-41023242/main/.gitignore \xa0 \xa0 \n 加入 main.py:\xa0\xa0 \xa0 https://raw.githubusercontent.com/mdecad2022/site-41023242/main/main.py \xa0 \xa0 \n 在倉儲根目錄加入\xa0\xa0 nocache.py, 內容如:\xa0\xa0 \xa0 https://github.com/mdecycu/cmsimde/blob/2a41b26b6d9b1446a8b448bb6fb58a6dbb41c867/nocache.py \xa0 \xa0 \n \n \xa0 之後再設法以\xa0\xa0 import 方式, 利用個人課程倉儲內容在\xa0 replit 建立\xa0 Repl 專案. \xa0 \n \xa0 至於\xa0 Repl 專案, 必須在 Shell, 執行下列兩則指令: git submodule update --init --recursive \xa0 \xa0   \n 在倉儲根目錄執行\xa0\xa0\xa0 \xa0 \n 表示要取下所有子模組的內容 \xa0 \n \xa0 並且安裝啟動\xa0 cmsimde\xa0 所需要的\xa0 Python 模組:\xa0\xa0 \xa0 \n \xa0 \n \xa0\xa0\xa0 pip install\xa0\xa0 \xa0 flask flask_cors bs4 lxml pelican markdown gevent \xa0 \n \xa0 \n Replit 專案上的靜態內容同步至原始課程倉儲教學影片 \xa0 \n \xa0 2b 開始在\xa0 \xa0 https://exam.cycu.org \xa0\xa0 \xa0 建立考試帳號.   \n', 'tags': '', 'url': 'w3.html'}, {'title': 'w4', 'text': '電腦輔助設計室 WIFI 連線 \xa0 \n SSID: 810WIFI \xa0 \n 密碼: 056315360 \xa0 \n \xa0 \n 通訊協定: Wi-Fi 4 (802.11n) \xa0 \n 安全性類型: WPA2-Personal \xa0 \n 網路頻帶: 2.4 GHz \xa0 \n 網路通道: 9 \xa0 \n 連結速度 (接收/傳輸): 72/72 (Mbps) \xa0 \n IPv6 位址:\u202f \xa0 \n 連結-本機 IPv6 位址:\u202f \xa0 \n IPv6 DNS 伺服器:\u202f \xa0 \n IPv4 位址:\u202f \xa0 \n IPv4 DNS 伺服器:\u202f \xa0 \n 製造商: Realtek Semiconductor Corp. \xa0 \n 描述: Realtek RTL8188EU Wireless LAN 802.11n USB 2.0 Network Adapter \xa0 \n 驅動程式版本: 1030.38.712.2019 \xa0 \n 實體位址 (MAC): C4-6E-1F-10-C4-47 \xa0 \n \xa0 \n 第四週上課筆記 \xa0 \n \xa0 \xa0 \n 在 Replit 執行動態網站: \xa0 \n 必須進入 Shell, 在倉儲根目錄執行下列兩則指令 (取下子模組內容, 並安裝執行所需模組). \xa0 \n git submodule update --init --recursive \xa0 \n pip install\xa0\xa0 flask flask_cors bs4 lxml pelican markdown gevent \xa0 \n \xa0 \n 考試主機:\u202f \xa0 https://exam.cycu.org \u202f \xa0 \n \xa0 \n 每一位學員已經學會利用雲端與近端工具維護個人倉儲與網頁 \xa0 \n \xa0 \n 近端工具: 下載\xa0\xa0 \xa0 portable_python_3.10.6.7z \xa0 \n \xa0\xa0\xa0 Portablegit \xa0 \n 雲端工具: Replit \xa0 \n Web 分散式版次管理:\xa0 \xa0 https://github.com \xa0 \xa0 \n \xa0 \n 電腦輔助繪圖工具:\xa0 \xa0 \n \xa0\xa0\xa0 近端 NX2027 與 Solvespace \xa0 \n \xa0\xa0\xa0 雲端: \xa0 https://onshape.com \xa0 \xa0 \n \xa0 \n Notebook 權限設定 - 在瀏覽器中開啟 - 右上方 Share – Manage Access \xa0 \n _________________________________ \xa0 \n \xa0 \n 登入 Github \xa0 \n \xa0 \n 登入 Replit \xa0 \n \xa0 \n 登入 Onedrive ,\xa0 \xa0 \n \xa0 \n 遠端使用外部網路, 必須設定 140.130.17.4 port 3128 代理主機, 帳密都為: kmolab \xa0 \n \xa0 \n https://exam.cycu.org \xa0 \xa0 \n', 'tags': '', 'url': 'w4.html'}, {'title': 'w5', 'text': '透過 stud.cycu.org 執行動態網站 \xa0 \n \n (登入 stud.cycu.org)利用 @nfu 電子郵箱收到的帳號與密碼, 登入 stud.cycu.org:\xa0 在命令列視窗, 以 ssh\xa0 cad學號@stud.cycu.org , 輸入對應密後, 可以登入系統 \xa0 \n 請到 excel 檔案\xa0 查詢 \xa0stud.cycu.org 中與帳號對應的近端 (給 127.0.0.1 使用) 與遠端 (給 stud.cycu.org) 埠號 \xa0 \n (透過 sftp 建立近端目錄與 stud.cycu.org 帳號下的對應)\xa0 開啟另一個命令列, 執行 sftp\xa0 帳號@stud.cycu.org \xa0\xa0\xa0 輸入對應密碼, 即可建立近端目錄與遠端系統目錄間的對應. \xa0 \n 與在近端(Windows)利用\xa0 SSH 建立 public/private keys 流程相同, 必須在 Linux (Ubuntu) 利用 ssh-keygen 建立 keys. 所產生的 id_rsa 為 private key, 而 id_rsa.pub 為 public key, 都位於 .ssh 目錄下. \xa0 \n 利用 sftp\xa0 進入 stud.cycu.org 後, cd 到 .ssh, 以 get id_rsa.pub 將 public key 取至\xa0 Windows 後, 送到 Github -> Settings -> SSH and GPG 設定區, 透過 new key 登錄公鑰. \xa0 \n 接下來要下載\xa0\xa0 config \xa0設定檔案,\xa0 以 sftp 放入 stud.cycu.org 主機的 .ssh 目錄中. \xa0 \n 上面的\xa0 config\xa0 主要設定 SSH 協定對\xa0 github.com\xa0 連線時的代理主機, 但取下\xa0 cmsimde\xa0 子模組使用的是\xa0 https,\xa0 因此執行下列\xa0 git clone 時將會同時用到\xa0\xa0 SSH\xa0 與 https\xa0 協定,\xa0 因此除了\xa0 .ssh\xa0 目錄下要有\xa0 config\xa0 設定檔案外, 也必須同時在\xa0 .gitconfig\xa0 檔案中設定\xa0 http.proxy,\xa0 也就是以 git config --global http.proxy\xa0 http://p42.cycu.org:3128 \xa0 設定供 https 連線使用的代理主機, 並且以\xa0 git config --global\xa0 user.name 以及\xa0 git config --global\xa0 user.email 設定提交用的身分註記. \xa0 \n 在 stud.cycu.org 中, 以 git clone --recurse-submodules\xa0\xa0 git@github.com:mdecad2022/site-個人github帳號.git \xa0\xa0 取下個人倉儲. \xa0 \n 假如先前使用\xa0 git clone 並沒有取下\xa0 cmsimde 子模組內容, 只要在設定 https 代理主機後, 進入倉儲根目錄執行\xa0 git submodule update --init\xa0 --recursive\xa0 即可取下子模組內容. \xa0 \n 接著下載\xa0 server.py , 在 Windows 編輯\xa0 server.py , 將個人分配到的 9xxxx 埠號填入後存檔, 以 sftp 放入上列取下的倉儲根目錄. \xa0 \n 在 stud.cycu.org 系統中, 進入倉儲 (site-github帳號) 後, 執行 python3 server.py, 就可啟用動態網站. \xa0 \n 設定完成後, 各學員將會有一個廣域網路上的動態網站 (取代 Replit 上的動態網站),\xa0 https://stud.cycu.org:8xxxx \xa0\xa0 看到個人的動態網站. \xa0 \n 動態網站改版後, 轉為靜態, 必須透過 source\xa0 acp \xa0以 SSH 將改版內容送回 github. (必須利用 chmod u+x acp 將 acp\xa0 檔案屬性改為對\xa0 user 可以 execute (也就是 x 屬性). \xa0 \n 執行 source acp\xa0 "提交字串" 之前必須要 git config\xa0 --global user.name,\xa0 git config\xa0 --global user.email,\xa0 git config\xa0 --global http.proxy \xa0 \n 上述採用指令模式對\xa0 server sftp 也可以利用\xa0\xa0 Filezilla portable , 以圖形介面完成. 而 ssh 也可以透過\xa0 putty.exe 執行遠端登入. \xa0 \n \n \xa0 \n \xa0 \n config under .ssh 目錄: \xa0 \n Host 就是 .ssh/config 設定的對應 session 名稱, 此處若 Host 設為 demo, 則 SSH 對應的 .git/config 中的 URL 就必須使用 \xa0 git@demo:mdecad2022/site-scrum-1.git, \xa0 demo 就是 Host, Port 則是隨後的 %p 也就 SSH 協定內定的 port 22, %h 則是 Hostname, 也就是 github.com \xa0 \n \xa0\xa0 遇到問題 \n 1.當我抓完config檔案後，沒有把sftp 放入 stud.cycu.org 主機的 .ssh 目錄中.所以出現錯誤，後來處理完後就可以繼續下一步然後執行 \n 2.acp沒有回送Github所以找不到acp的存在 \n', 'tags': '', 'url': 'w5.html'}, {'title': 'w6', 'text': '在 stud.cycu.org 執行動態網站 \xa0 \n git config --global http.proxy\xa0 http://p42.cycu.org:3128 \xa0 \n git config --global user.name "name" \xa0 \n \xa0 git config --global user.email "email" \xa0 \n \xa0 \xa0 \n git clone --recurse-submodules git@demo:mdecad2022/site-github_帳號.git s \xa0 \n \xa0 \xa0 \n git submodule update --init --recursive \xa0 \n \xa0 \xa0 \n python3 server.py \xa0 \n \xa0 \xa0 \n https://stud.cycu.org:8xxx \xa0 \n \xa0 \xa0 \n acp 放入倉儲後 \xa0 \n \xa0 \xa0 \n chmod u+x acp\xa0 \xa0 \n \xa0 \xa0 \n source acp "提交說明字串" \xa0 \n \xa0 \xa0 \n python3 server.py & \xa0 \n \xa0 \xa0 \n ps aux | grep "server.py" \xa0 \n \xa0 \xa0 \n kill -9 111919 \xa0 \n \xa0 \xa0 \n cd s, cd cmsimde, git pull origin master \xa0 \n \xa0 \xa0 \n cd .., python3 server.py \xa0 \n \xa0 \xa0 \n exit 推出 login \xa0 \n \xa0 \n To fix the cmsimde bug on edit during https mode: \xa0 \n Need to cd cmsimde and do "git pull origin master" to update the cmsimde submodule files. \xa0 \n \xa0 \n After that, go back to the repository root directory to execute python3 server.py & to start the dynamic site.   \n 遇到問題 \n git clone --recurse-submodules git@demo:mdecad2022/site-github_帳號.git s 打這串的時候在site-github_帳號時又多打了site-40823250所以才會找不到我的帳號位置，原因是前面已經有了帳號的位置所以無需重複一次   \n', 'tags': '', 'url': 'w6.html'}, {'title': 'w7', 'text': '繪圖網址 \n', 'tags': '', 'url': 'w7.html'}, {'title': 'w8-9', 'text': '零件繪圖練習 \n \n 請分別利用 Solvespace、Onshape 與 NX2027 繪製\xa0\xa0 Base_Clamp 零件. \xa0 \xa0 \n 完成後請將零件繪圖過程與畫面送至個人 H1 標題 cad2022 下的 H2 Solvespace、Onshape、NX2027 頁面中, 並將工程圖與零件檔案放入頁面連結. \xa0 \n \n', 'tags': '', 'url': 'w8-9.html'}, {'title': 'w10', 'text': '\n \n w10 開始由各分組提供考試題庫 \n \n \n \n \n cad2022_tcexam_xml_templates.7z  為 NX-part 與 cadlab network setting 的題目檔案 \n 請各組依照相同格式, module name 選用 cad2022, 而 subject 則依照各組組序與命題週次命名, 例如: 2ag1-w6 表示由 2a 第一組針對 w6 的上課內容命題, 每一組題目至少 5 題, 至多 10 題, 每一題必須至少有 5 個正確敘述, 5 個錯誤敘述. \n w10 2b HW: 已知小考考試結果的  json 檔案內容 , \n \n 請問可否列出缺考人員名單? \n 可否列出第一欄位為修課人員學號, 第二欄位為小考成績 \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w10.html'}, {'title': 'w11', 'text': 'w11 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  #######-- _______ 開始  下方程式底線處為程式名稱 #######>\n    <!-- _______ 開始  \n \n \n  -- _______ 結束  下方程式底線處為程式名稱 >\n    <!-- _______ 結束  \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n 遇到問題 \n 1.在<>裡面更改電腦ID底線那行，沒有把ID打進去所以沒有使用列名單 \n 2.<>本來已經改好裡面的程式碼，但是之後案開始卻無法列名單，後來我把這串<!-- 導入 brython 程式庫 --> <p> <script src="./../cmsimde/static/brython.js"></script> <script src="./../cmsimde/static/brython_stdlib.js"></script> </p> <!-- 啟動 Brython --> <p> <script> window.onload=function(){ brython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']}); } </script> </p> <p><!-- 導入 FileSaver 與 filereader --></p> <p> <script src="./../cmsimde/static/ace/FileSaver.min.js" type="text/javascript"></script> <script src="./../cmsimde/static/ace/filereader.js" type="text/javascript"></script> </p> <p><!-- 導入 ace --></p> <p> <script src="./../cmsimde/static/ace/ace.js" type="text/javascript"></script> <script src="./../cmsimde/static/ace/ext-language_tools.js" type="text/javascript"></script> <script src="./../cmsimde/static/ace/mode-python3.js" type="text/javascript"></script> <script src="./../cmsimde/static/ace/snippets/python.js" type="text/javascript"></script> </p> <p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --> <script src="./../cmsimde/static/Cango-24v03-min.js"></script> <script src="./../cmsimde/static/gearUtils-09.js"></script> <script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"></script> <script src="./../cmsimde/static/sylvester.js"></script> <script src="./../cmsimde/static/PrairieDraw.js"></script> </p> \n 重新貼進去程式碼後才能夠案開始列名單出來 \n  editor1 結束  \n \n  ##########################################  \n', 'tags': '', 'url': 'w11.html'}, {'title': 'w12', 'text': '123 \n \n \n', 'tags': '', 'url': 'w12.html'}, {'title': 'Brython', 'text': 'https://site-40823250.40823250.repl.co \n https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation \n Variables \n Comments \n Numbers \n Strings \n print \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束 ', 'tags': '', 'url': 'Brython.html'}]};